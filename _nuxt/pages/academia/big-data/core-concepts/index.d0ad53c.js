(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{217:function(e,t,n){"use strict";n(111);var o=n(74);t.a=Object(o.a)("layout")},218:function(e,t,n){"use strict";n(26),n(12);var o=n(3),r=(n(46),n(209),n(47),n(6),n(4),n(17),n(58),n(59),n(145),n(0)),l=n(112),c=n(2);function v(object,e){var t=Object.keys(object);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(object);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(object,e).enumerable}))),t.push.apply(t,n)}return t}function d(e){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?v(Object(source),!0).forEach((function(t){Object(o.a)(e,t,source[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(source)):v(Object(source)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(source,t))}))}return e}var h=["sm","md","lg","xl"],f=["start","end","center"];function m(e,t){return h.reduce((function(n,o){return n[e+Object(c.n)(o)]=t(),n}),{})}var _=function(e){return[].concat(f,["baseline","stretch"]).includes(e)},y=m("align",(function(){return{type:String,default:null,validator:_}})),w=function(e){return[].concat(f,["space-between","space-around"]).includes(e)},j=m("justify",(function(){return{type:String,default:null,validator:w}})),S=function(e){return[].concat(f,["space-between","space-around","stretch"]).includes(e)},D=m("alignContent",(function(){return{type:String,default:null,validator:S}})),O={align:Object.keys(y),justify:Object.keys(j),alignContent:Object.keys(D)},P={align:"align",justify:"justify",alignContent:"align-content"};function T(e,t,n){var o=P[e];if(null!=n){if(t){var r=t.replace(e,"");o+="-".concat(r)}return(o+="-".concat(n)).toLowerCase()}}var B=new Map;t.a=r.a.extend({name:"v-row",functional:!0,props:d(d(d({tag:{type:String,default:"div"},dense:Boolean,noGutters:Boolean,align:{type:String,default:null,validator:_}},y),{},{justify:{type:String,default:null,validator:w}},j),{},{alignContent:{type:String,default:null,validator:S}},D),render:function(e,t){var n=t.props,data=t.data,r=t.children,c="";for(var v in n)c+=String(n[v]);var d=B.get(c);return d||function(){var e,t;for(t in d=[],O)O[t].forEach((function(e){var o=n[e],r=T(t,e,o);r&&d.push(r)}));d.push((e={"no-gutters":n.noGutters,"row--dense":n.dense},Object(o.a)(e,"align-".concat(n.align),n.align),Object(o.a)(e,"justify-".concat(n.justify),n.justify),Object(o.a)(e,"align-content-".concat(n.alignContent),n.alignContent),e)),B.set(c,d)}(),e(n.tag,Object(l.a)(data,{staticClass:"row",class:d}),r)}})},239:function(e,t,n){"use strict";n.r(t);var o={data:function(){return{}},head:{title:"Core Concepts - MarceloFern",meta:[{hid:"description",name:"description",content:"Big Data - Core Concepts - Marcelo Fernandes"}]}},r=n(53),l=n(73),c=n.n(l),v=n(216),d=n(217),h=n(218),component=Object(r.a)(o,(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("v-layout",{staticClass:"post"},[n("v-flex",[n("v-row",[n("h1",[e._v("Big Data - Core Concepts")])]),e._v(" "),n("v-row",[n("p",{staticClass:"caption"},[e._v("Date: 2020-11-03")])]),e._v(" "),n("v-row",[n("p",[e._v("Quick navigation:")])]),e._v(" "),n("v-row",[n("ul",[n("li",[n("a",{attrs:{href:"#TPS"}},[e._v("Transaction Processing System (TPS)")])]),e._v(" "),n("li",[n("a",{attrs:{href:"#VS"}},[e._v("The Big Data V's")])]),e._v(" "),n("li",[n("a",{attrs:{href:"#lotsa"}},[e._v('"lotsa data"')])]),e._v(" "),n("li",[n("a",{attrs:{href:"#big-vs-small"}},[e._v("Big Data vs Small Data")])]),e._v(" "),n("li",[n("a",{attrs:{href:"#mapreduce"}},[e._v("MapReduce")])]),e._v(" "),n("li",[n("a",{attrs:{href:"#pareto"}},[e._v("Pareto's Principle")])])])]),e._v(" "),n("v-row",[n("h2",{attrs:{id:"TPS"}},[e._v("Transaction Processing System (TPS)")])]),e._v(" "),n("v-row",[n("p",[n("b",[e._v("Definition:")]),e._v(" In computing, "),n("i",[e._v("transactions")]),e._v(" are\n        individual instructions that are sent to a machine. When\n        a system (either software or hardware) is composed by a \n        combination of transactions that are further processed by\n        the computer, this system is called a TPS. These information\n        systems can perform CRUD operations on the data transactions\n        of an enterprise.\n      ")]),e._v(" "),n("p",[e._v("\n        Said systems can be divided into two categories:\n      ")])]),e._v(" "),n("v-row",[n("ol",[n("li",[e._v("\n          Batch processing: Each transaction is received by a program (job)\n          that will aggregate several transactions into a batch. This\n          batch will then be processed. Given that each transaction is\n          added to a batch, the results of a single transaction won't\n          be immediately available as they will be waiting on the completion\n          of the whole batch before results are available.\n        ")]),e._v(" "),n("li",[e._v("\n          Real-time processing: A unique transaction is received and\n          processed quickly enough by the application.\n        ")])])]),e._v(" "),n("v-row",[n("p",[e._v("The foundations of TPS's are:")])]),e._v(" "),n("v-row",[n("ol",[n("li",[e._v("\n          Performance - Usually measured by number of transactions per\n          period of time\n        ")]),e._v(" "),n("li",[e._v("\n          Continuous Availability - No transaction is lost due to the\n          system being off-line\n        ")]),e._v(" "),n("li",[e._v("\n          Data Integrity - Transactions won't be corrupted due to\n          multi-user environments or other threats.\n        ")]),e._v(" "),n("li",[e._v("\n          Ease of Use - No user should be overwhelmed by the complexity\n          of the system\n        ")]),e._v(" "),n("li",[e._v("\n          Modular Growth - The system should be able to scale without\n          needing a full replacement\n        ")])])]),e._v(" "),n("v-row",[n("p",[e._v("\n        TPS can be created to process on-line transactions. In which case,\n        they are commonly referred to as On-Line Transaction Processing\n        Systems (OLTP).\n      ")]),e._v(" "),n("p",[e._v("\n        OLTP systems are usually composed by:\n      ")])]),e._v(" "),n("v-row",[n("ol",[n("li",[e._v("\n          A transaction server\n        ")]),e._v(" "),n("li",[e._v("\n          Remote procedures on the server\n        ")]),e._v(" "),n("li",[e._v("\n          Customised code written for the client and for the server\n        ")]),e._v(" "),n("li",[e._v("\n          Minimum communication overhead - Short structures of changes\n          over long ones.\n        ")])])]),e._v(" "),n("v-row",[n("h2",{attrs:{id:"VS"}},[e._v("The Big Data V's")])]),e._v(" "),n("v-row",[n("ol",[n("li",[e._v("\n          Volume - Large amount of data\n        ")]),e._v(" "),n("li",[e._v("\n          Velocity - The content of the data is always changing\n        ")]),e._v(" "),n("li",[e._v("\n          Variety - Different forms of data (images, text, audio...)\n        ")]),e._v(" "),n("li",[e._v("\n          Vagueness\n        ")]),e._v(" "),n("li",[e._v("\n          Virality\n        ")]),e._v(" "),n("li",[e._v("\n          Viscosity\n        ")])])]),e._v(" "),n("v-row",[n("h2",{attrs:{id:"lotsa"}},[e._v('"lotsa data"')])]),e._v(" "),n("v-row",[n("p",[e._v('\n        A gigantic dataset in terms of magnitude but with a simple format.\n        E.g., The phone number of every person living in the world.\n        This is not considering Big Data, given that "lotsa data" isn\'t\n        necessary complex and does not have much variety.\n      ')])]),e._v(" "),n("v-row",[n("h2",{attrs:{id:"big-vs-small"}},[e._v("Big Data vs Small Data")])]),e._v(" "),n("v-row",[n("ol",[n("li",[n("b",[e._v("Goals:")]),e._v(" small data usually answers a specific question or\n          serve a specific goal. In Big Data, one usually finds himself\n          finding surprising goals along the way.\n        ")]),e._v(" "),n("li",[n("b",[e._v("Location:")]),e._v(" small data is typically contained in one or\n          a few servers. Big Data is spread throughout multiple servers\n          that can be located anywhere on earth.\n        ")]),e._v(" "),n("li",[n("b",[e._v("Data Structure and Content:")]),e._v(" small data contains highly\n          structured data. The data often comes in the form of an uniform\n          spreadsheet. Big data contains and absorbs unstructured data\n          such as free-text, images, videos, sounds, etc.\n        ")]),e._v(" "),n("li",[n("b",[e._v("Data preparation:")]),e._v(" In small data the user of an application\n          usually prepares their own data. In Big Data the information is\n          prepared by many people, and it's often the case that the person\n          analysing the data isn't the same collecting or preparing it.\n        ")]),e._v(" "),n("li",[n("b",[e._v("Logenvity:")]),e._v(" When a small data project is finished, the\n          data is usually discarted (~7 years is the mean). In Big Data,\n          it's often the case that data must be stored in perpetuity, and\n          it can be digested into another Big Data storage.\n        ")]),e._v(" "),n("li",[n("b",[e._v("Measurements:")]),e._v(" Small data can typically be measured using\n          one set of standard units. In Big Data, measurements will be taken\n          from multiple different protocols given that many types of data\n          are delivered in many types of formats.\n        ")]),e._v(" "),n("li",[n("b",[e._v("Reproducibility:")]),e._v(" Small data projects are usually reproducible.\n          Studies that use small data can easily be put to proof. If a new\n          dataset arises, the whole project can be repeated. In Big Data,\n          project replication is mostly impossible.\n        ")]),e._v(" "),n("li",[n("b",[e._v("Stakes:")]),e._v(" Small data projects have limited costs. Small data\n          failure is, usually, recoverable. In Big Data, projects can be\n          extremely expensive, and a failure on a Big Data project can\n          lead to bankruptcy.\n        ")]),e._v(" "),n("li",[n("b",[e._v("Introspection:")]),e._v(" In a small data project, an individual data\n          point can be found given a row and a column identifier. This\n          is not usually achievable on Big Data projects and it may require\n          the use of different techniques.\n        ")]),e._v(" "),n("li",[n("b",[e._v("Analysis:")]),e._v(" Small data can typically be analysed together\n          all at once. In Big Data is usually analysed on incremental steps.\n        ")])])]),e._v(" "),n("v-row",[n("h2",{attrs:{id:"mapreduce"}},[e._v("MapReduce")])]),e._v(" "),n("v-row",[n("p",[e._v("\n        MapReduce is a method used to process computationally intensive\n        problems on multiple computers, in parallel. The method is divided\n        into a mapping step, and a reducing step. In the mapping step,\n        a master computer will divide the problem into smaller problems\n        that are distributed to other computers (slaves). In the reducing\n        step, the master computer collects all the output from the other\n        computers."),n("br"),e._v("\n        Although MapReduce is intended for Big Data resources, and can hold\n        petabytes of data, most Big Data problems do not require MapReduce.\n      ")])]),e._v(" "),n("v-row",[n("h2",{attrs:{id:"pareto"}},[e._v("Pareto's Principle")])]),e._v(" "),n("v-row",[n("p",[e._v("\n        Pareto's principle is based on the assumption that for many\n        outcomes ~80% of the effects come from ~20% of the causes.\n        The principle within this statement is also called the 80/20 rule,\n        or the law of the vital few.\n      ")]),e._v(" "),n("p",[e._v("\n        An example in Computer Science can be applyed to optimisation\n        efforts. Microsoft once reported that by fixing the 20% of the\n        most-reported bugs, 80% of the related crashes would be eliminated.\n      ")])])],1)],1)}),[],!1,null,"1d54cfe0",null);t.default=component.exports;c()(component,{VFlex:v.a,VLayout:d.a,VRow:h.a})}}]);