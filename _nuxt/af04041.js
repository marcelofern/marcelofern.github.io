(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{241:function(e,n,t){var content=t(242);"string"==typeof content&&(content=[[e.i,content,""]]),content.locals&&(e.exports=content.locals);(0,t(32).default)("48751daa",content,!0,{sourceMap:!1})},242:function(e,n,t){(n=t(31)(!1)).push([e.i,'.theme--light.v-expansion-panels .v-expansion-panel{background-color:#fff;color:rgba(0,0,0,.87)}.theme--light.v-expansion-panels .v-expansion-panel--disabled{color:rgba(0,0,0,.38)}.theme--light.v-expansion-panels .v-expansion-panel:not(:first-child):after{border-color:rgba(0,0,0,.12)}.theme--light.v-expansion-panels .v-expansion-panel-header .v-expansion-panel-header__icon .v-icon{color:rgba(0,0,0,.54)}.theme--light.v-expansion-panels.v-expansion-panels--focusable .v-expansion-panel-header:hover:before{opacity:.04}.theme--light.v-expansion-panels.v-expansion-panels--focusable .v-expansion-panel-header--active:before,.theme--light.v-expansion-panels.v-expansion-panels--focusable .v-expansion-panel-header--active:hover:before,.theme--light.v-expansion-panels.v-expansion-panels--focusable .v-expansion-panel-header:focus:before{opacity:.12}.theme--light.v-expansion-panels.v-expansion-panels--focusable .v-expansion-panel-header--active:focus:before{opacity:.16}.theme--light.v-expansion-panels.v-expansion-panels--hover>.v-expansion-panel>.v-expansion-panel-header:hover:hover:before{opacity:.04}.theme--light.v-expansion-panels.v-expansion-panels--hover>.v-expansion-panel>.v-expansion-panel-header:hover--active:before,.theme--light.v-expansion-panels.v-expansion-panels--hover>.v-expansion-panel>.v-expansion-panel-header:hover--active:hover:before,.theme--light.v-expansion-panels.v-expansion-panels--hover>.v-expansion-panel>.v-expansion-panel-header:hover:focus:before{opacity:.12}.theme--light.v-expansion-panels.v-expansion-panels--hover>.v-expansion-panel>.v-expansion-panel-header:hover--active:focus:before{opacity:.16}.theme--dark.v-expansion-panels .v-expansion-panel{background-color:#1e1e1e;color:#fff}.theme--dark.v-expansion-panels .v-expansion-panel--disabled{color:hsla(0,0%,100%,.5)}.theme--dark.v-expansion-panels .v-expansion-panel:not(:first-child):after{border-color:hsla(0,0%,100%,.12)}.theme--dark.v-expansion-panels .v-expansion-panel-header .v-expansion-panel-header__icon .v-icon{color:#fff}.theme--dark.v-expansion-panels.v-expansion-panels--focusable .v-expansion-panel-header:hover:before{opacity:.08}.theme--dark.v-expansion-panels.v-expansion-panels--focusable .v-expansion-panel-header--active:before,.theme--dark.v-expansion-panels.v-expansion-panels--focusable .v-expansion-panel-header--active:hover:before,.theme--dark.v-expansion-panels.v-expansion-panels--focusable .v-expansion-panel-header:focus:before{opacity:.24}.theme--dark.v-expansion-panels.v-expansion-panels--focusable .v-expansion-panel-header--active:focus:before{opacity:.32}.theme--dark.v-expansion-panels.v-expansion-panels--hover>.v-expansion-panel>.v-expansion-panel-header:hover:hover:before{opacity:.08}.theme--dark.v-expansion-panels.v-expansion-panels--hover>.v-expansion-panel>.v-expansion-panel-header:hover--active:before,.theme--dark.v-expansion-panels.v-expansion-panels--hover>.v-expansion-panel>.v-expansion-panel-header:hover--active:hover:before,.theme--dark.v-expansion-panels.v-expansion-panels--hover>.v-expansion-panel>.v-expansion-panel-header:hover:focus:before{opacity:.24}.theme--dark.v-expansion-panels.v-expansion-panels--hover>.v-expansion-panel>.v-expansion-panel-header:hover--active:focus:before{opacity:.32}.v-expansion-panels{border-radius:4px;display:flex;flex-wrap:wrap;justify-content:center;list-style-type:none;padding:0;width:100%;z-index:1}.v-expansion-panels>*{cursor:auto}.v-expansion-panels>:first-child{border-top-left-radius:inherit;border-top-right-radius:inherit}.v-expansion-panels>:last-child{border-bottom-left-radius:inherit;border-bottom-right-radius:inherit}.v-expansion-panels:not(.v-expansion-panels--accordion):not(.v-expansion-panels--tile)>.v-expansion-panel--active{border-radius:4px}.v-expansion-panels:not(.v-expansion-panels--accordion):not(.v-expansion-panels--tile)>.v-expansion-panel--active+.v-expansion-panel{border-top-left-radius:4px;border-top-right-radius:4px}.v-expansion-panels:not(.v-expansion-panels--accordion):not(.v-expansion-panels--tile)>.v-expansion-panel--next-active{border-bottom-left-radius:4px;border-bottom-right-radius:4px}.v-expansion-panels:not(.v-expansion-panels--accordion):not(.v-expansion-panels--tile)>.v-expansion-panel--next-active .v-expansion-panel-header{border-bottom-left-radius:inherit;border-bottom-right-radius:inherit}.v-expansion-panel{flex:1 0 100%;max-width:100%;position:relative;transition:.3s cubic-bezier(.25,.8,.5,1)}.v-expansion-panel:before{border-radius:inherit;bottom:0;content:"";left:0;position:absolute;right:0;top:0;z-index:-1;transition:box-shadow .28s cubic-bezier(.4,0,.2,1);will-change:box-shadow;box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12)}.v-expansion-panel:not(:first-child):after{border-top:thin solid;content:"";left:0;position:absolute;right:0;top:0;transition:border-color .2s cubic-bezier(.4,0,.2,1),opacity .2s cubic-bezier(.4,0,.2,1)}.v-expansion-panel--disabled .v-expansion-panel-header{pointer-events:none}.v-expansion-panel--active+.v-expansion-panel,.v-expansion-panel--active:not(:first-child){margin-top:16px}.v-expansion-panel--active+.v-expansion-panel:after,.v-expansion-panel--active:not(:first-child):after{opacity:0}.v-expansion-panel--active>.v-expansion-panel-header{min-height:64px}.v-expansion-panel--active>.v-expansion-panel-header--active .v-expansion-panel-header__icon:not(.v-expansion-panel-header__icon--disable-rotate) .v-icon{transform:rotate(-180deg)}.v-expansion-panel-header__icon{display:inline-flex;margin-bottom:-4px;margin-top:-4px;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.v-application--is-ltr .v-expansion-panel-header__icon{margin-left:auto}.v-application--is-rtl .v-expansion-panel-header__icon{margin-right:auto}.v-expansion-panel-header{align-items:center;border-top-left-radius:inherit;border-top-right-radius:inherit;display:flex;font-size:.9375rem;line-height:1;min-height:48px;outline:none;padding:16px 24px;position:relative;transition:min-height .3s cubic-bezier(.25,.8,.5,1);width:100%}.v-application--is-ltr .v-expansion-panel-header{text-align:left}.v-application--is-rtl .v-expansion-panel-header{text-align:right}.v-expansion-panel-header:not(.v-expansion-panel-header--mousedown):focus:before{opacity:.12}.v-expansion-panel-header:before{background-color:currentColor;border-radius:inherit;bottom:0;content:"";left:0;opacity:0;pointer-events:none;position:absolute;right:0;top:0;transition:opacity .3s cubic-bezier(.25,.8,.5,1)}.v-expansion-panel-header>:not(.v-expansion-panel-header__icon){flex:1 1 auto}.v-expansion-panel-content{display:flex}.v-expansion-panel-content__wrap{padding:0 24px 16px;flex:1 1 auto;max-width:100%}.v-expansion-panels--accordion>.v-expansion-panel{margin-top:0}.v-expansion-panels--accordion>.v-expansion-panel:after{opacity:1}.v-expansion-panels--popout>.v-expansion-panel{max-width:calc(100% - 32px)}.v-expansion-panels--popout>.v-expansion-panel--active{max-width:calc(100% + 16px)}.v-expansion-panels--inset>.v-expansion-panel{max-width:100%}.v-expansion-panels--inset>.v-expansion-panel--active{max-width:calc(100% - 32px)}.v-expansion-panels--flat>.v-expansion-panel:after{border-top:none}.v-expansion-panels--flat>.v-expansion-panel:before{box-shadow:0 0 0 0 rgba(0,0,0,.2),0 0 0 0 rgba(0,0,0,.14),0 0 0 0 rgba(0,0,0,.12)}.v-expansion-panels--tile,.v-expansion-panels--tile>.v-expansion-panel:before{border-radius:0}',""]),e.exports=n},245:function(e,n,t){"use strict";t(27),t(13),t(6),t(4),t(16);var o=t(3),r=t(239),l=t(233),c=t(2),v=t(39);function h(object,e){var n=Object.keys(object);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(object);e&&(t=t.filter((function(e){return Object.getOwnPropertyDescriptor(object,e).enumerable}))),n.push.apply(n,t)}return n}n.a=Object(v.a)(Object(r.a)("expansionPanels","v-expansion-panel","v-expansion-panels"),Object(l.b)("expansionPanel",!0)).extend({name:"v-expansion-panel",props:{disabled:Boolean,readonly:Boolean},data:function(){return{content:null,header:null,nextIsActive:!1}},computed:{classes:function(){return function(e){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?h(Object(source),!0).forEach((function(n){Object(o.a)(e,n,source[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(source)):h(Object(source)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(source,n))}))}return e}({"v-expansion-panel--active":this.isActive,"v-expansion-panel--next-active":this.nextIsActive,"v-expansion-panel--disabled":this.isDisabled},this.groupClasses)},isDisabled:function(){return this.expansionPanels.disabled||this.disabled},isReadonly:function(){return this.expansionPanels.readonly||this.readonly}},methods:{registerContent:function(e){this.content=e},unregisterContent:function(){this.content=null},registerHeader:function(e){this.header=e,e.$on("click",this.onClick)},unregisterHeader:function(){this.header=null},onClick:function(e){e.detail&&this.header.$el.blur(),this.$emit("click",e),this.isReadonly||this.isDisabled||this.toggle()},toggle:function(){var e=this;this.content&&(this.content.isBooted=!0),this.$nextTick((function(){return e.$emit("change")}))}},render:function(e){return e("div",{staticClass:"v-expansion-panel",class:this.classes,attrs:{"aria-expanded":String(this.isActive)}},Object(c.p)(this))}})},246:function(e,n,t){"use strict";var o=t(237),r=t(240),l=t(112),c=t(233),v=t(2),h=t(39),d=Object(h.a)(r.a,l.a,Object(c.a)("expansionPanel","v-expansion-panel-content","v-expansion-panel"));n.a=d.extend().extend({name:"v-expansion-panel-content",computed:{isActive:function(){return this.expansionPanel.isActive}},created:function(){this.expansionPanel.registerContent(this)},beforeDestroy:function(){this.expansionPanel.unregisterContent()},render:function(e){var n=this;return e(o.a,this.showLazyContent((function(){return[e("div",n.setBackgroundColor(n.color,{staticClass:"v-expansion-panel-content",directives:[{name:"show",value:n.isActive}]}),[e("div",{class:"v-expansion-panel-content__wrap"},Object(v.p)(n))])]})))}})},247:function(e,n,t){"use strict";t(27),t(13),t(6),t(4),t(16);var o=t(3),r=t(237),l=t(236),c=t(112),v=t(233),h=t(235),d=t(2),x=t(39);function f(object,e){var n=Object.keys(object);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(object);e&&(t=t.filter((function(e){return Object.getOwnPropertyDescriptor(object,e).enumerable}))),n.push.apply(n,t)}return n}function _(e){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?f(Object(source),!0).forEach((function(n){Object(o.a)(e,n,source[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(source)):f(Object(source)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(source,n))}))}return e}var m=Object(x.a)(c.a,Object(v.a)("expansionPanel","v-expansion-panel-header","v-expansion-panel"));n.a=m.extend().extend({name:"v-expansion-panel-header",directives:{ripple:h.a},props:{disableIconRotate:Boolean,expandIcon:{type:String,default:"$expand"},hideActions:Boolean,ripple:{type:[Boolean,Object],default:!1}},data:function(){return{hasMousedown:!1}},computed:{classes:function(){return{"v-expansion-panel-header--active":this.isActive,"v-expansion-panel-header--mousedown":this.hasMousedown}},isActive:function(){return this.expansionPanel.isActive},isDisabled:function(){return this.expansionPanel.isDisabled},isReadonly:function(){return this.expansionPanel.isReadonly}},created:function(){this.expansionPanel.registerHeader(this)},beforeDestroy:function(){this.expansionPanel.unregisterHeader()},methods:{onClick:function(e){this.$emit("click",e)},genIcon:function(){var e=Object(d.p)(this,"actions")||[this.$createElement(l.a,this.expandIcon)];return this.$createElement(r.c,[this.$createElement("div",{staticClass:"v-expansion-panel-header__icon",class:{"v-expansion-panel-header__icon--disable-rotate":this.disableIconRotate},directives:[{name:"show",value:!this.isDisabled}]},e)])}},render:function(e){var n=this;return e("button",this.setBackgroundColor(this.color,{staticClass:"v-expansion-panel-header",class:this.classes,attrs:{tabindex:this.isDisabled?-1:null,type:"button"},directives:[{name:"ripple",value:this.ripple}],on:_(_({},this.$listeners),{},{click:this.onClick,mousedown:function(){return n.hasMousedown=!0},mouseup:function(){return n.hasMousedown=!1}})}),[Object(d.p)(this,"default",{open:this.isActive},!0),this.hideActions||this.genIcon()])}})},250:function(e,n,t){"use strict";t(27),t(13),t(6),t(4),t(16);var o=t(3),r=(t(241),t(243)),l=t(18);function c(object,e){var n=Object.keys(object);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(object);e&&(t=t.filter((function(e){return Object.getOwnPropertyDescriptor(object,e).enumerable}))),n.push.apply(n,t)}return n}function v(e){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?c(Object(source),!0).forEach((function(n){Object(o.a)(e,n,source[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(source)):c(Object(source)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(source,n))}))}return e}n.a=r.a.extend({name:"v-expansion-panels",provide:function(){return{expansionPanels:this}},props:{accordion:Boolean,disabled:Boolean,flat:Boolean,hover:Boolean,focusable:Boolean,inset:Boolean,popout:Boolean,readonly:Boolean,tile:Boolean},computed:{classes:function(){return v(v({},r.a.options.computed.classes.call(this)),{},{"v-expansion-panels":!0,"v-expansion-panels--accordion":this.accordion,"v-expansion-panels--flat":this.flat,"v-expansion-panels--hover":this.hover,"v-expansion-panels--focusable":this.focusable,"v-expansion-panels--inset":this.inset,"v-expansion-panels--popout":this.popout,"v-expansion-panels--tile":this.tile})}},created:function(){this.$attrs.hasOwnProperty("expand")&&Object(l.a)("expand","multiple",this),Array.isArray(this.value)&&this.value.length>0&&"boolean"==typeof this.value[0]&&Object(l.a)(':value="[true, false, true]"',':value="[0, 2]"',this)},methods:{updateItem:function(e,n){var t=this.getValue(e,n),o=this.getValue(e,n+1);e.isActive=this.toggleMethod(t),e.nextIsActive=this.toggleMethod(o)}}})},252:function(e,n,t){var content=t(271);"string"==typeof content&&(content=[[e.i,content,""]]),content.locals&&(e.exports=content.locals);(0,t(32).default)("788e8113",content,!0,{sourceMap:!1})},270:function(e,n,t){"use strict";t(252)},271:function(e,n,t){(n=t(31)(!1)).push([e.i,".graph-pic[data-v-09d5bb8a]{padding:10px 0;display:block;width:100%;margin:0 auto}",""]),e.exports=n},362:function(e,n,t){"use strict";t.r(n);var o={data:function(){return{firstPlotImg:"/images/data_visualisation/isolines_matplot_contour.png",marchingSquares:"/images/data_visualisation/marching_squares.png",drawIsoline:"/images/data_visualisation/isoline_drawn.png"}},head:{title:"Isolines From Scratch",meta:[{hid:"description",name:"description",content:"Isolines from scratch - Marcelo Fernandes"}]}},r=(t(270),t(56)),l=t(72),c=t.n(l),v=t(245),h=t(246),d=t(247),x=t(250),f=t(224),_=t(231),m=t(232),component=Object(r.a)(o,(function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("v-layout",{staticClass:"post"},[t("v-flex",[t("v-row",[t("h1",[e._v("Isolines From Scratch")])]),e._v(" "),t("v-row",[t("p",{staticClass:"caption"},[e._v("Date: 2021-03-21")])]),e._v(" "),t("v-row",[t("h2",[e._v("Definition")])]),e._v(" "),t("v-row",[t("p",[e._v("\n          Isolines are lines on a map (or graph) connecting datapoints\n          of the same value. Isolines are often used in Geography for\n          studying patterns of temperature, height, rain, etc.\n        ")])]),e._v(" "),t("v-row",[t("h2",[e._v("Example")])]),e._v(" "),t("v-row",[t("p",[e._v("\n          Suppose that a client's marketing department wants you to plot\n          an isoline graph in order to identify customers with the same\n          budget capabilities. The dataset is normalized to 200 and\n          is shown below:\n        ")])]),e._v(" "),t("v-row",[t("blockquote",[t("pre",[e._v("19x21 matrix:\n\n[[162,145,130,117,106,97,90,85,82,81,82,85,90,97,106,117,130,145,162,181,200],\n[145,128,113,100,89,80,73,68,65,64,65,68,73,80,89,100,113,128,145,164,185],\n[130,113,98,85,74,65,58,53,50,49,50,53,58,65,74,85,98,113,130,149,170],\n[117,100,85,72,61,52,45,40,37,36,37,40,45,52,61,72,85,100,117,136,157],\n[106,89,74,61,50,41,34,29,26,25,26,29,34,41,50,61,74,89,106,125,146],\n[97,80,65,52,41,32,25,20,17,16,17,20,25,32,41,52,65,80,97,116,137],\n[90,73,58,45,34,25,18,13,10,9,10,13,18,25,34,45,58,73,90,109,130],\n[85,68,53,40,29,20,13,8,5,4,5,8,13,20,29,40,53,68,85,104,125],\n[82,65,50,37,26,17,10,5,2,1,2,5,10,17,26,37,50,65,82,101,122],\n[81,64,49,36,25,16,9,4,1,0,1,4,9,16,25,36,49,64,81,100,121],\n[82,65,50,37,26,17,10,5,2,1,2,5,10,17,26,37,50,65,82,101,122],\n[85,68,53,40,29,20,13,8,5,4,5,8,13,20,29,40,53,68,85,104,125],\n[90,73,58,45,34,25,18,13,10,9,10,13,18,25,34,45,58,73,90,109,130],\n[97,80,65,52,41,32,25,20,17,16,17,20,25,32,41,52,65,80,97,116,137],\n[106,89,74,61,50,41,34,29,26,25,26,29,34,41,50,61,74,89,106,125,146],\n[117,100,85,72,61,52,45,40,37,36,37,40,45,52,61,72,85,100,117,136,157],\n[130,113,98,85,74,65,58,53,50,49,50,53,58,65,74,85,98,113,130,149,170],\n[145,128,113,100,89,80,73,68,65,64,65,68,73,80,89,100,113,128,145,164,185],\n[162,145,130,117,106,97,90,85,82,81,82,85,90,97,106,117,130,145,162,181,200]]")])])]),e._v(" "),t("v-row",[t("p",[t("br"),e._v("\n          We want to plot the isoline for the isovalue of 11.\n        ")]),e._v(" "),t("p",[e._v("\n          Before building the algorithm from scratch, let's use matplotlib's\n          countour function to see what we are looking at:\n        ")])]),e._v(" "),t("v-row",{staticClass:"graph-pic"},[t("v-row",[t("a",{staticClass:"img-link",attrs:{href:e.firstPlotImg,target:"_blank"}},[t("img",{attrs:{src:e.firstPlotImg}})])])],1),e._v(" "),t("v-row",[t("v-expansion-panels",[t("v-expansion-panel",[t("v-expansion-panel-header",[e._v("\n              [Expand] Python code for the graph above\n            ")]),e._v(" "),t("v-expansion-panel-content",[t("blockquote",[t("var",[t("pre",[e._v("import matplotlib\nimport numpy as np\nimport matplotlib.cm as cm\nimport matplotlib.pyplot as plt\n\nx = np.arange(1, 22, 1)\ny = np.arange(1, 20, 1)\nX, Y = np.meshgrid(x, y)\n\nZ = [[162,145,130,117,106,97,90,85,82,81,82,85,90,97,106,117,130,145,162,181,200],\n[145,128,113,100,89,80,73,68,65,64,65,68,73,80,89,100,113,128,145,164,185],\n[130,113,98,85,74,65,58,53,50,49,50,53,58,65,74,85,98,113,130,149,170],\n[117,100,85,72,61,52,45,40,37,36,37,40,45,52,61,72,85,100,117,136,157],\n[106,89,74,61,50,41,34,29,26,25,26,29,34,41,50,61,74,89,106,125,146],\n[97,80,65,52,41,32,25,20,17,16,17,20,25,32,41,52,65,80,97,116,137],\n[90,73,58,45,34,25,18,13,10,9,10,13,18,25,34,45,58,73,90,109,130],\n[85,68,53,40,29,20,13,8,5,4,5,8,13,20,29,40,53,68,85,104,125],\n[82,65,50,37,26,17,10,5,2,1,2,5,10,17,26,37,50,65,82,101,122],\n[81,64,49,36,25,16,9,4,1,0,1,4,9,16,25,36,49,64,81,100,121],\n[82,65,50,37,26,17,10,5,2,1,2,5,10,17,26,37,50,65,82,101,122],\n[85,68,53,40,29,20,13,8,5,4,5,8,13,20,29,40,53,68,85,104,125],\n[90,73,58,45,34,25,18,13,10,9,10,13,18,25,34,45,58,73,90,109,130],\n[97,80,65,52,41,32,25,20,17,16,17,20,25,32,41,52,65,80,97,116,137],\n[106,89,74,61,50,41,34,29,26,25,26,29,34,41,50,61,74,89,106,125,146],\n[117,100,85,72,61,52,45,40,37,36,37,40,45,52,61,72,85,100,117,136,157],\n[130,113,98,85,74,65,58,53,50,49,50,53,58,65,74,85,98,113,130,149,170],\n[145,128,113,100,89,80,73,68,65,64,65,68,73,80,89,100,113,128,145,164,185],\n[162,145,130,117,106,97,90,85,82,81,82,85,90,97,106,117,130,145,162,181,200]]\n\nfig, ax = plt.subplots()\nCS = ax.contour(X, Y, Z, levels=[10, 20, 30, 50, 80, 130, 180])\nax.clabel(CS, inline=True, fontsize=10)\nax.set_title('Isolines graph')")])])])])],1)],1)],1),e._v(" "),t("v-row",[t("h2",[e._v("Marching Squares")])]),e._v(" "),t("v-row",[t("p",[e._v('\n          "Marching squares" is an algorithm that efficiently helps us\n          to build isolines. The algorithm is better explained via the image\n          below (courtesy of wikipedia):\n        ')])]),e._v(" "),t("v-row",{staticClass:"graph-pic"},[t("v-row",[t("a",{staticClass:"img-link",attrs:{href:e.marchingSquares,target:"_blank"}},[t("img",{attrs:{src:e.marchingSquares}})])])],1),e._v(" "),t("v-row",[t("h2",[e._v("Step 1. Create the threshold matrix")])]),e._v(" "),t("v-row",[t("p",[e._v("\n          The threshold matrix is created by going over the original matrix\n          and substituting the original values by:\n        ")])]),e._v(" "),t("v-row",[t("p",[t("ul",[t("li",[e._v("\n              1 when when the original value is above the isovalue.\n            ")]),e._v(" "),t("li",[e._v("\n              0 when the original value is below the isovalue.\n            ")])])])]),e._v(" "),t("v-row",[t("p",[e._v("\n          For the isovalue of 11, we then have the following threshold matrix:\n          "),t("br")])]),e._v(" "),t("v-row",[t("blockquote",[t("var",[t("pre",[e._v("[[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1],\n[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1],\n[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1],\n[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]]")])])])]),e._v(" "),t("v-row",[t("p",[e._v("\n          The above already give us a clue about where the isolines will be\n          drawn. Check the location where we have groups of zeros.\n        ")])]),e._v(" "),t("v-row",[t("h2",[e._v("\n          Step 2. Map each cell to a number that corresponds to which\n          corners are true/false\n        ")])]),e._v(" "),t("v-row",[t("p",[e._v("\n          The threshold matrix can be mapped into squares,\n          where each data value is the vertex of a square. These corners\n          can either be true or false. This gives us the following amount of\n          combinations:\n        ")]),e._v(" "),t("p",[e._v("\n          (true or false) * (true or false) * (true or false) * (true or false) = \n        ")]),e._v(" "),t("p",[e._v("\n          2 * 2 * 2 * 2 = 16\n        ")]),e._v(" "),t("p",[e._v("\n          We can then proceed with the following mapping of cases:\n        ")])]),e._v(" "),t("v-row",[t("ul",[t("li",[e._v("\n            Case 0 - All corners are True\n          ")]),e._v(" "),t("li",[e._v("\n            Case 1 - All corners except the bottom left are True\n          ")]),e._v(" "),t("li",[e._v("\n            Case 2 - All corners except the bottom right are True\n          ")]),e._v(" "),t("li",[e._v("\n            Case 3 - Only the top corners are True\n          ")]),e._v(" "),t("li",[e._v("\n            Case 4 - All corners except the top right are True\n          ")]),e._v(" "),t("li",[e._v("\n            Case 5 - Left upper corner and low right corner are True\n          ")]),e._v(" "),t("li",[e._v("\n            Case 6 - Left top/bottom corners are True\n          ")]),e._v(" "),t("li",[e._v("\n            Case 7 - Only the top left corner is True\n          ")]),e._v(" "),t("li",[e._v("\n            Case 8 - All corners except the top left are True\n          ")]),e._v(" "),t("li",[e._v("\n            Case 9 - Right top/bottom corners are True\n          ")]),e._v(" "),t("li",[e._v("\n            Case 10 - Top right corner and bottom left corner are True\n          ")]),e._v(" "),t("li",[e._v("\n            Case 11 - Only the top right corner is True\n          ")]),e._v(" "),t("li",[e._v("\n            Case 12 - Only the bottom corners are True\n          ")]),e._v(" "),t("li",[e._v("\n            Case 13 - Only the bottom right corner is True\n          ")]),e._v(" "),t("li",[e._v("\n            Case 14 - Only the bottom left corner is True\n          ")]),e._v(" "),t("li",[e._v("\n            Case 15 - No corners are True\n          ")])])]),e._v(" "),t("v-row",[t("p",[t("br"),e._v("\n          An example of Python algorithm to rewrite the threshold matrix\n          into the cases matrix:\n        ")])]),e._v(" "),t("v-row",[t("v-expansion-panels",[t("v-expansion-panel",[t("v-expansion-panel-header",[e._v("\n              [Expand] Python code for the graph above\n            ")]),e._v(" "),t("v-expansion-panel-content",[t("blockquote",[t("pre",[e._v('case_0 = [[1,1],[1,1]]\ncase_1 = [[1,1],[0,1]]\ncase_2 = [[1,1],[1,0]]\ncase_3 = [[1,1],[0,0]]\ncase_4 = [[1,0],[1,1]]\ncase_5 = [[1,0],[0,1]]\ncase_6 = [[1,0],[1,0]]\ncase_7 = [[1,0],[0,0]]\ncase_8 = [[0,1],[1,1]]\ncase_9 = [[0,1],[0,1]]\ncase_10 = [[0,1],[1,0]]\ncase_11 = [[0,1],[0,0]]\ncase_12 = [[0,0],[1,1]]\ncase_13 = [[0,0],[0,1]]\ncase_14 = [[0,0],[1,0]]\ncase_15 = [[0,0], [0,0]]\n\ncases = [\n    case_0, case_1, case_2, case_3,\n    case_4, case_5, case_6, case_7, \n    case_8, case_9, case_10, case_11, \n    case_12, case_13, case_14, case_15\n]\n\ncases_mapper = {str(case): i for i, case in enumerate(cases)}\n\ndef get_corners_matrix(row, column):\n    """\n    Get the corners matrix:\n      [[top_left, top_right], [bottom_left, bottom_right]]\n\n    where top_left is the position of the entry itself.\n    """\n    return [\n        [\n            threshold_matrix[row][column],\n            threshold_matrix[row][column + 1],\n        ],\n        [\n            threshold_matrix[row + 1][column],\n            threshold_matrix[row + 1][column + 1],\n        ]\n    ]\n\nmapped_matrix = []\n\nfor row in range(len(threshold_matrix) - 1):\n    mapped_row = []\n    for column in range(len(threshold_matrix[0]) - 1):\n        corners_matrix = get_corners_matrix(row, column)\n        mapped_row.append(cases_mapper[str(corners_matrix)])\n    mapped_matrix.append(mapped_row)\n')])])])],1)],1)],1),e._v(" "),t("v-row",[t("p",[e._v("\n          Note: The mapped matrix has the dimension M-1,N-1 since the last\n          row and the last column aren't mapped.\n        ")])]),e._v(" "),t("v-row",[t("h2",[e._v("\n          Step 3. Draw the patterns\n        ")])]),e._v(" "),t("v-row",{staticClass:"graph-pic"},[t("v-row",[t("a",{staticClass:"img-link",attrs:{href:e.drawIsoline,target:"_blank"}},[t("img",{attrs:{src:e.drawIsoline}})])])],1),e._v(" "),t("v-row",[t("v-expansion-panels",[t("v-expansion-panel",[t("v-expansion-panel-header",[e._v("\n              [Expand] Python code for the graph above\n            ")]),e._v(" "),t("v-expansion-panel-content",[t("blockquote",[t("pre",[e._v("x_threshold = 21\ny_threshold = 19\n\n# graph configuration\nplt.style.use('seaborn-whitegrid')\nplt.grid(b=None)\nplt.xticks([])\nplt.yticks([])\nplt.xlim([-1,x_threshold])\nplt.ylim([-1,y_threshold])\n\ndef plot_line(x,y,case):\n    middle_y_left = [x, (y_threshold -1) - y - 0.5]\n    middle_y_right = [x + 1, (y_threshold -1) - y - 0.5]\n    middle_x_top = [x + 0.5, (y_threshold -1) - y]\n    middle_x_bottom = [x + 0.5, (y_threshold -1) - y - 1]\n    \n    if case in [1, 14]:\n        from_point = middle_y_left\n        to_point = middle_x_bottom\n    elif case in [2, 13]:\n        from_point = middle_x_bottom\n        to_point = middle_y_right\n    elif case in [3, 12]:\n        from_point = middle_y_left\n        to_point = middle_y_right\n    elif case in [4, 11]:\n        from_point = middle_x_top\n        to_point = middle_y_right\n    elif case == 5:\n        # case 5 is a composition of case 2 + case 7\n        plot_line(x, y, case=2)\n        plot_line(x, y, case=7)\n        return\n    elif case in [6, 9]:\n        from_point = middle_x_top\n        to_point = middle_x_bottom\n    elif case in [7,8]:\n        from_point = middle_y_left\n        to_point = middle_x_top\n    else:\n        # Never draw for case 0 or 15\n        return\n    x = [from_point[0],to_point[0]]\n    y = [from_point[1],to_point[1]]\n    plt.plot(x, y, color='black')\n    \nfor r_index, row in enumerate(mapped_matrix):\n    for c_index, column in enumerate(row):\n        plot_line(x=c_index, y=r_index, case=column)\n        \nfor r_index, row in enumerate(Z):\n    for c_index, column in enumerate(row):\n        label = str(column)\n        plt.annotate(\n            label,\n            (c_index,r_index),\n            ha='center',\n            va='center',\n        )\n")])])])],1)],1)],1),e._v(" "),t("v-row",[t("h2",[e._v("Step 4. Linear interpolation")])]),e._v(" "),t("v-row",[t("p",[e._v("\n          This is the last step to get our final isoline. It is also the most\n          complex one to code. I'll update this in the future if I ever\n          get the patience! (sorry, but let me know if you want this\n          to happen by flicking me an email).\n          "),t("s",[e._v("Step 3 should give you a good approximation nonetheless")])])])],1)],1)}),[],!1,null,"09d5bb8a",null);n.default=component.exports;c()(component,{VExpansionPanel:v.a,VExpansionPanelContent:h.a,VExpansionPanelHeader:d.a,VExpansionPanels:x.a,VFlex:f.a,VLayout:_.a,VRow:m.a})}}]);