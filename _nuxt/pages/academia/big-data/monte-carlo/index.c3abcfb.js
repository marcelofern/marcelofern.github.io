(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{217:function(n,e,t){"use strict";t(111);var o=t(74);e.a=Object(o.a)("layout")},218:function(n,e,t){"use strict";t(26),t(12);var o=t(3),r=(t(46),t(209),t(47),t(6),t(4),t(17),t(58),t(59),t(145),t(0)),c=t(112),l=t(2);function h(object,n){var e=Object.keys(object);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(object);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(object,n).enumerable}))),e.push.apply(e,t)}return e}function d(n){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?h(Object(source),!0).forEach((function(e){Object(o.a)(n,e,source[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(source)):h(Object(source)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(source,e))}))}return n}var f=["sm","md","lg","xl"],v=["start","end","center"];function m(n,e){return f.reduce((function(t,o){return t[n+Object(l.n)(o)]=e(),t}),{})}var w=function(n){return[].concat(v,["baseline","stretch"]).includes(n)},_=m("align",(function(){return{type:String,default:null,validator:w}})),y=function(n){return[].concat(v,["space-between","space-around"]).includes(n)},j=m("justify",(function(){return{type:String,default:null,validator:y}})),O=function(n){return[].concat(v,["space-between","space-around","stretch"]).includes(n)},C=m("alignContent",(function(){return{type:String,default:null,validator:O}})),x={align:Object.keys(_),justify:Object.keys(j),alignContent:Object.keys(C)},M={align:"align",justify:"justify",alignContent:"align-content"};function S(n,e,t){var o=M[n];if(null!=t){if(e){var r=e.replace(n,"");o+="-".concat(r)}return(o+="-".concat(t)).toLowerCase()}}var k=new Map;e.a=r.a.extend({name:"v-row",functional:!0,props:d(d(d({tag:{type:String,default:"div"},dense:Boolean,noGutters:Boolean,align:{type:String,default:null,validator:w}},_),{},{justify:{type:String,default:null,validator:y}},j),{},{alignContent:{type:String,default:null,validator:O}},C),render:function(n,e){var t=e.props,data=e.data,r=e.children,l="";for(var h in t)l+=String(t[h]);var d=k.get(l);return d||function(){var n,e;for(e in d=[],x)x[e].forEach((function(n){var o=t[n],r=S(e,n,o);r&&d.push(r)}));d.push((n={"no-gutters":t.noGutters,"row--dense":t.dense},Object(o.a)(n,"align-".concat(t.align),t.align),Object(o.a)(n,"justify-".concat(t.justify),t.justify),Object(o.a)(n,"align-content-".concat(t.alignContent),t.alignContent),n)),k.set(l,d)}(),n(t.tag,Object(c.a)(data,{staticClass:"row",class:d}),r)}})},242:function(n,e,t){"use strict";t.r(e);var o={data:function(){return{}},head:{title:"Monte Carlo Simulation - MarceloFern",meta:[{hid:"description",name:"description",content:"Monte Carlo Simulation - Marcelo Fernandes"}]}},r=t(53),c=t(73),l=t.n(c),h=t(216),d=t(217),f=t(218),component=Object(r.a)(o,(function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("v-layout",{staticClass:"post"},[t("v-flex",[t("v-row",[t("h1",[n._v("Monte Carlo Simulation")])]),n._v(" "),t("v-row",[t("p",{staticClass:"caption"},[n._v("Date: 2020-11-09")])]),n._v(" "),t("v-row",[t("p",[n._v("\n          The Monte Carlo methods are a group of algorithms that use\n          samples of random inputs to estimate results for an experiment.\n          As a simplistic example, consider the event of rolling a dice.\n          You know that the probability of rolling the number\n          4 is one in six. But you could also achieve a considerably good\n          estimation by rolling the dice a big-enough amount of times\n          and analysing the number of occurrences of the number 4.\n        ")]),n._v(" "),t("p",[n._v("\n          This is\n          the principle behind Monte Carlo methods. Instead of resolving\n          a problem deterministically (which can be extremely complex - though\n          not the case for our dice experiment), this problem is approached\n          in a stochastic way in which each statistical trial improves the\n          estimation of a determined event.\n        ")]),n._v(" "),t("p",[n._v("\n          Monte Carlo methods are particularly effective for problems\n          that are hard to solve using analytical techniques. For instance,\n          in the field\n          of "),t("i",[n._v("fluid simulation")]),n._v(", Monte Carlo methods are more successful\n          than molecular dynamics techniques due to the probabilistic\n          nature of Monte Carlo methods\n          "),t("a",{attrs:{href:"https://doi.org/10.1109/MCSE.2009.135",target:"_blank"}},[n._v("[1]")]),n._v(".\n          Other fields that have prominent uses of Monte Carlo methods are:\n          Radiative transfer\n          "),t("a",{attrs:{href:"https://doi.org/10.1007/s41115-019-0004-9",target:"_blank"}},[n._v("[2]")]),n._v(",\n          therapy imaging\n          "),t("a",{attrs:{href:"https://doi.org/10.1088/1742-6596/317/1/012016",target:"_blank"}},[n._v("[3]")]),n._v(",\n          x-ray imaging\n          "),t("a",{attrs:{href:"https://doi.org/10.1016/j.nima.2008.03.078",target:"_blank"}},[n._v("[4]")]),n._v(",\n          and more.\n        ")])]),n._v(" "),t("v-row",[t("h2",[n._v("Example: The Monty Hall Problem")])]),n._v(" "),t("v-row",[t("p",[n._v("\n          Named after the host of the popular show that introduced the problem.\n          In this problem, the person playing is faced with 3 closed doors.\n          Behind two of these three doors there is nothing, and behind one of\n          them there is a hidden prize.\n        ")]),n._v(" "),t("p",[n._v("\n          The player can choose any of the three doors, and as soon as one\n          choice is made, the player is shown that one of the other two doors\n          is empty. The player is then given the choice of changing their door,\n          or remaining with the same one.\n        ")]),n._v(" "),t("p",[n._v("\n          It seems counter intuitive, but if the player switches their\n          choice, their changes of winning doubles. Let's find it out\n          using a simple python script that runs a Monte Carlo experiment\n          for the given scenario 100,000 times:\n        ")])]),n._v(" "),t("v-row",[t("blockquote",[t("pre",[n._v("import random\n\ntotal_count = 0\nwins_count = 0\n\n# Runs the scenario a hundred thousand times\nfor i in range(100000):\n    doors = {1, 2, 3}\n    prize = random.randint(1, 3)\n    first_choice = random.randint(1, 3)\n    not_prize_door = (doors - {prize, first_choice}).pop()\n    new_choice = (doors - {not_prize_door, first_choice}).pop()\n    total_count += 1\n    if new_choice == prize:\n        wins_count += 1\n\nprint(f'Chance of winning when switching doors {wins_count*100/total_count}%')\n        ")])])]),n._v(" "),t("v-row",[t("p",[n._v("\n          After running the code 5 times, our result is:\n        ")])]),n._v(" "),t("v-row",[t("blockquote",[t("pre",[n._v("Chance of winning when switching doors 66.793%\nChance of winning when switching doors 66.487%\nChance of winning when switching doors 66.836%\nChance of winning when switching doors 66.626%\nChance of winning when switching doors 66.463%\n        ")])])]),n._v(" "),t("v-row",[t("p",[n._v("\n          This matches the expected result of winning the game two out\n          of three times (2/3 ~= 66.7%)\n        ")])])],1)],1)}),[],!1,null,"44f9965a",null);e.default=component.exports;l()(component,{VFlex:h.a,VLayout:d.a,VRow:f.a})}}]);