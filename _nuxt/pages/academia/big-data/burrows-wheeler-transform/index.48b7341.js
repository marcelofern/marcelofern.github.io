(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{217:function(e,t,n){"use strict";n(111);var r=n(74);t.a=Object(r.a)("layout")},218:function(e,t,n){"use strict";n(26),n(12);var r=n(3),o=(n(46),n(209),n(47),n(6),n(4),n(17),n(58),n(59),n(145),n(0)),c=n(112),l=n(2);function v(object,e){var t=Object.keys(object);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(object);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(object,e).enumerable}))),t.push.apply(t,n)}return t}function f(e){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?v(Object(source),!0).forEach((function(t){Object(r.a)(e,t,source[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(source)):v(Object(source)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(source,t))}))}return e}var _=["sm","md","lg","xl"],d=["start","end","center"];function h(e,t){return _.reduce((function(n,r){return n[e+Object(l.n)(r)]=t(),n}),{})}var w=function(e){return[].concat(d,["baseline","stretch"]).includes(e)},y=h("align",(function(){return{type:String,default:null,validator:w}})),A=function(e){return[].concat(d,["space-between","space-around"]).includes(e)},T=h("justify",(function(){return{type:String,default:null,validator:A}})),j=function(e){return[].concat(d,["space-between","space-around","stretch"]).includes(e)},m=h("alignContent",(function(){return{type:String,default:null,validator:j}})),B={align:Object.keys(y),justify:Object.keys(T),alignContent:Object.keys(m)},O={align:"align",justify:"justify",alignContent:"align-content"};function k(e,t,n){var r=O[e];if(null!=n){if(t){var o=t.replace(e,"");r+="-".concat(o)}return(r+="-".concat(n)).toLowerCase()}}var D=new Map;t.a=o.a.extend({name:"v-row",functional:!0,props:f(f(f({tag:{type:String,default:"div"},dense:Boolean,noGutters:Boolean,align:{type:String,default:null,validator:w}},y),{},{justify:{type:String,default:null,validator:A}},T),{},{alignContent:{type:String,default:null,validator:j}},m),render:function(e,t){var n=t.props,data=t.data,o=t.children,l="";for(var v in n)l+=String(n[v]);var f=D.get(l);return f||function(){var e,t;for(t in f=[],B)B[t].forEach((function(e){var r=n[e],o=k(t,e,r);o&&f.push(o)}));f.push((e={"no-gutters":n.noGutters,"row--dense":n.dense},Object(r.a)(e,"align-".concat(n.align),n.align),Object(r.a)(e,"justify-".concat(n.justify),n.justify),Object(r.a)(e,"align-content-".concat(n.alignContent),n.alignContent),e)),D.set(l,f)}(),e(n.tag,Object(c.a)(data,{staticClass:"row",class:f}),o)}})},239:function(e,t,n){"use strict";n.r(t);var r={data:function(){return{}},head:{title:"BTW (Burrows-Wheeler-Transform)- MarceloFern",meta:[{hid:"description",name:"description",content:"Burrows Wheeler Transform (BWT) - Marcelo Fernandes"}]}},o=n(53),c=n(73),l=n.n(c),v=n(216),f=n(217),_=n(218),component=Object(o.a)(r,(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("v-layout",{staticClass:"post"},[n("v-flex",[n("v-row",[n("h1",[e._v("Burrows Wheeler Transform (BWT)")])]),e._v(" "),n("v-row",[n("p",{staticClass:"caption"},[e._v("Date: 2020-11-13")])]),e._v(" "),n("v-row",[n("p",[e._v("\n          BWT is a text transformation technique. It can be used to improve\n          the efficiency of data-compression algorithms (such as bzip2)."),n("br"),e._v("\n          The transformation can be reversed knowing just the\n          position of the first character.\n        ")]),e._v(" "),n("p",[e._v("\n          For a string that contains many repeated strings (or sub-strings),\n          such as:\n        ")])]),e._v(" "),n("v-row",[n("blockquote",[e._v("\n          Peter Piper picked a peck of pickled peppers\n          A peck of pickled peppers Peter Piper picked^\n        ")])]),e._v(" "),n("v-row",[n("p",[e._v("\n          The equivalent BWT string will be:\n        ")])]),e._v(" "),n("v-row",[n("blockquote",[e._v("\n          ssrrdkkaAddrrffd ^ eeiiiieeeeppkllkppttppppPPooppppPPcccccckk\n          iipp eeeeeeeerree\n        ")])]),e._v(" "),n("v-row",[n("p",[e._v("\n          Take a note of how many repeated characters are in the string above.\n          This output will be easy to compress due to the high number of\n          repeated characters.\n        ")])]),e._v(" "),n("v-row",[n("h2",[e._v("Example: Transforming a string into its BWT version")])]),e._v(" "),n("v-row",[n("p",[e._v("\n          Let's transform the string "),n("b",[e._v("BIGDATA$")]),e._v(". Note how $ is appended\n          to indicate the end of the string.\n        ")])]),e._v(" "),n("v-row",[n("ol",[n("li",[e._v("\n            Firstly, create a list with all the N circular shifts of your\n            input, where N = the string length:\n            "),n("br"),e._v(" "),n("ul",[n("li",[e._v("BIGDATA$")]),e._v(" "),n("li",[e._v("IGDATA$B")]),e._v(" "),n("li",[e._v("GDATA$BI")]),e._v(" "),n("li",[e._v("DATA$BIG")]),e._v(" "),n("li",[e._v("ATA$BIGD")]),e._v(" "),n("li",[e._v("TA$BIGDA")]),e._v(" "),n("li",[e._v("A$BIGDAT")]),e._v(" "),n("li",[e._v("$BIGDATA")])])]),n("li",[e._v("\n              Now we want to sort the circular shifts above alphabetically\n              (but considering the characters ^ and $ too)."),n("br"),e._v(" "),n("ul",[n("li",[e._v("$BIGDATA")]),e._v(" "),n("li",[e._v("A$BIGDAT")]),e._v(" "),n("li",[e._v("ATA$BIGD")]),e._v(" "),n("li",[e._v("BIGDATA$")]),e._v(" "),n("li",[e._v("DATA$BIG")]),e._v(" "),n("li",[e._v("GDATA$BI")]),e._v(" "),n("li",[e._v("IGDATA$B")]),e._v(" "),n("li",[e._v("TA$BIGDA")])])]),e._v(" "),n("li",[e._v("\n            The last step is to select the "),n("b",[e._v("last")]),e._v(" character of each\n            sorted entry from the list above. Therefore our result is:\n            "),n("b",[n("i",[e._v("ATD$GIBA")])])])])]),e._v(" "),n("v-row",[n("p",[e._v("Here is a Python script that would create this transform:")])]),e._v(" "),n("v-row",[n("blockquote",[n("pre",[e._v("def bwt_transform(string):\n    table = [string + '$']\n    for i in range(len(string)):\n        last_element = table[-1]\n        table.append(last_element[1:] + last_element[0])\n    return ''.join([i[-1] for i in sorted(table)])\n        ")])])])],1)],1)}),[],!1,null,"5f38af98",null);t.default=component.exports;l()(component,{VFlex:v.a,VLayout:f.a,VRow:_.a})}}]);